@page "/"
@using web_client.Services
@inject IKeyboardService _keyboardService
@inject IJSRuntime JsRunTime

<div tabindex="0" @ref="_keymappedKeys" @onkeydown="KeyPress">
    <img src="images/keyboard.jpg" style="display: block; margin: auto; width:30%;" />
    <div style="align-content: center;width: 30%;margin: auto;">
        <button style="background-color:white;color:black" class="btn btn-primary" @onclick="async () => await SendNote(Note.C)">C</button>
        <button style="background-color:black;color:white" class="btn btn-primary" @onclick="async () => await SendNote(Note.D_flat)">Db</button>
        <button style="background-color:white;color:black" class="btn btn-primary" @onclick="async () => await SendNote(Note.D)">D</button>
        <button style="background-color:black;color:white" class="btn btn-primary" @onclick="async () => await SendNote(Note.E_flat)">Eb</button>
        <button style="background-color:white;color:black" class="btn btn-primary" @onclick="async () => await SendNote(Note.E)">E</button>
        <button style="background-color:white;color:black" class="btn btn-primary" @onclick="async () => await SendNote(Note.F)">F</button>
        <button style="background-color:black;color:white" class="btn btn-primary" @onclick="async () => await SendNote(Note.G_flat)">Gb</button>
        <button style="background-color:white;color:black" class="btn btn-primary" @onclick="async () => await SendNote(Note.G)">G</button>
        <button style="background-color:black;color:white" class="btn btn-primary" @onclick="async () => await SendNote(Note.A_flat)">Ab</button>
        <button style="background-color:white;color:black" class="btn btn-primary" @onclick="async () => await SendNote(Note.A)">A</button>
        <button style="background-color:black;color:white" class="btn btn-primary" @onclick="async () => await SendNote(Note.B_flat)">Bb</button>
        <button style="background-color:white;color:black" class="btn btn-primary" @onclick="async () => await SendNote(Note.B)">B</button>
    </div>
</div>

@foreach (var note in _keyboardService.PlayedNotes)
{
    <p>@note</p>
}

@code {
    private ElementReference _keymappedKeys;

    protected override async Task OnInitializedAsync()
    {
        Inialize();
    }

    private void Inialize()
    {
        _keyboardService.SetupReceiver(async (note) => await PlayNote(note));
    }

    private async Task SendNote(Note note)
    {
        await _keyboardService.SendNote(note);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await _keymappedKeys.FocusAsync();
    }

    private async Task KeyPress(KeyboardEventArgs e)
    {
        await PlayNote(Note.C);
    }

    private async Task PlayNote(Note note)
    {
        await InvokeAsync(() => StateHasChanged());
        try
        {
            await JsRunTime.InvokeAsync<int>($"MyLib.playNote", (int)note);
        }
        catch (Microsoft.JSInterop.JSException) { } // TODO resolve: excpetion thrown by Tone.js 
    }
}